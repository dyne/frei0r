name: frei0r

on:
  push:
    paths-ignore:
      - 'doc/**'
      - '*.md'
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '*.md'
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:

  # reuse:
  #   name: ðŸš¨ REUSE Compliance
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: fsfe/reuse-action@v1

  c-lint:
    name: ðŸš¨ C lint
    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-lint')"
    steps:
      - uses: actions/checkout@v3
      - uses: reviewdog/action-cpplint@master
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          targets: --recursive src
          level: warning
          flags: --linelength=120 # Optional
          filter: "-readability/braces\
            ,-readability/casting\
            ,-readability/todo\
            ,-whitespace/comma\
            ,-whitespace/braces\
            ,-whitespace/comments\
            ,-whitespace/indent\
            ,-whitespace/newline\
            ,-whitespace/operators\
            ,-whitespace/parens\
            ,-whitespace/tab\
            ,-whitespace/end_of_line\
            ,-whitespace/line_length\
            ,-whitespace/blank_line\
            ,-whitespace/semicolon\
            ,-build/include_subdir\
            ,-build/include_order\
            "

  test-suite:
    name: ðŸ”¬ test
    needs: [c-lint]
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-test')"
    strategy:
      matrix:
        compiler: [clang-14]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          sudo apt-get update -qy
          sudo apt-get install --no-install-recommends -y ${{ matrix.compiler }} cmake ninja-build libfreetype-dev libopencv-dev libcairo2-dev libgavl-dev
      - name: ${{ matrix.compiler }} initialize cmake build
        run: |
          mkdir -p build && cd build
          cmake -G "Ninja" ../
      - name: ${{ matrix.compiler }} run ninja build
        run: |
          cd build && ninja
      - name: ${{ matrix.compiler }} analyze plugins
        run: |
          cd test && make
      - name: ${{ matrix.compiler }} upload plugin analysis
        uses: actions/upload-artifact@v3
        with:
          name: release-plugin-analysis
          path: test/*.json
        
  semantic-release:
    name: ðŸ¤– Semantic release
    runs-on: ubuntu-latest
    needs: [test-suite]
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-release')"
    # if: ${{ github.ref_name == 'master' && github.event_name == 'push' }}
    outputs:
      release: ${{ steps.tag_release.outputs.release }}
      version: ${{ steps.tag_release.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install semantic-release
        run: |
          npm i npx
          npm i semantic-release/changelog
      - name: Tag release
        id: tag_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release | tee semantic-release.log
          if [[ `git tag --points-at HEAD` == "" ]]; then
            echo "release=False" >> $GITHUB_OUTPUT
          else
            echo "release=True" >> $GITHUB_OUTPUT
            awk '/Published release/ { printf("version=v%s\n",$8) }' semantic-release.log >> $GITHUB_OUTPUT
          fi

  msvc-build:
    name: ðŸ’» msvc build win64
    runs-on: windows-latest
    needs: [semantic-release, test-suite, c-lint]
    if: ${{ needs.semantic-release.outputs.release == 'True' }}
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
      - name: choco install deps
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: install libopencv-dev
      - name: Build using nmake
        run: |
          mkdir build && cd build
          cmake -G "NMake Makefiles" ../
          nmake
      - name: Upload win64 filters
        uses: actions/upload-artifact@v3
        with:
          name: release-win64-filters
          path: build/src/filter/**/*.dll
      - name: Upload win64 mixers
        uses: actions/upload-artifact@v3
        with:
          name: release-win64-mixers
          path: build/src/mixer*/**/*.dll
      - name: Upload win64 generators
        uses: actions/upload-artifact@v3
        with:
          name: release-win64-generators
          path: build/src/generator/**/*.dll

  draft-binary-release:
    name: ðŸ“¦ Pack release
    needs: [msvc-build]
    if: ${{ needs.semantic-release.outputs.release == 'True' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: download binary artifacts
        uses: actions/download-artifact@v3
        with:
          path: |
            frei0r-bin
      - name: create compressed archives
        run: |
          cd frei0r-bin
          dst=frei0r-filters_${{ needs.semantic-release.outputs.version }}_win64
          mkdir $dst && find release-win64-filters -type f -name '*.dll' -exec cp {} $dst \;
          cp ../README.md ../COPYING ../ChangeLog ../AUTHORS $dst
          echo "${{ needs.semantic-release.outputs.version }}" > $dst/VERSION
          zip -r -9 $dst.zip $dst
          dst=frei0r-mixers_${{ needs.semantic-release.outputs.version }}_win64
          mkdir $dst && find release-win64-mixers -type f -name '*.dll' -exec cp {} $dst \;
          cp ../README.md ../COPYING ../ChangeLog ../AUTHORS $dst
          echo "${{ needs.semantic-release.outputs.version }}" > $dst/VERSION
          zip -r -9 $dst.zip $dst
          dst=frei0r-generators_${{ needs.semantic-release.outputs.version }}_win64
          mkdir $dst && find release-win64-generators -type f -name '*.dll' -exec cp {} $dst \;
          cp ../README.md ../COPYING ../ChangeLog ../AUTHORS $dst
          echo "${{ needs.semantic-release.outputs.version }}" > $dst/VERSION
          zip -r -9 $dst.zip $dst
          sha256sum *.tar.gz > SHA256SUMS.txt
      - name: show directory structure
        run: tree -dL 3
      - name: release all archives
        uses: softprops/action-gh-release@v1
        with:
          files: |
            frei0r-bin/*.zip
            frei0r-bin/SHA256SUMS.txt
          tag_name: ${{ needs.semantic-release.outputs.version }}
          draft: true
          prerelease: false
          fail_on_unmatched_files: true
          generate_release_notes: true


